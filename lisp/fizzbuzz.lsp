(defun fizzbuzz (lst)
  (let ((head (car lst))
	(tail (cdr lst)))
    (unless (null head)
      (let ((fizz (= (mod head 3) 0))
	    (buzz (= (mod head 5) 0)))
	(if (or fizz buzz)
	    (progn (if fizz (princ "Fizz"))
		   (if buzz (princ "Buzz")))
	  (princ head))
	(format t "~%")
	(fizzbuzz tail)))))

(defun mk-list (st ed acc)
  (if (= st ed)
      (reverse (cons st acc))
    (mk-list (+ 1 st) ed (cons st acc))))

(fizzbuzz (mk-list 1 100 nil))
